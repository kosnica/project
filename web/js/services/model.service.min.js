"use strict";angular.module("core.model",[]),angular.module("core.model").factory("DataModel",["NoteService","$filter",function(NoteService,$filter){function updateRecords(id,data){var index=originalData.findIndex(function(note){return note.id===id});for(var alias in data)originalData[index][alias]=data[alias]}function removeData(id){var index=serviceData.noteData.findIndex(function(note){return note.id===id});serviceData.noteData.splice(index,1),originalData.splice(index,1)}function filterData(){var filteredData=[];return filteredData="all-notes"===filterType||"trash"===filterType?$filter("filter")(originalData,{status:filterStatus}):$filter("filter")(originalData,{status:filterStatus,type:filterType}),serviceData.noteData.length=0,filteredData.length>0&&(filteredData.map(function(obj){serviceData.noteData.push(obj)}),!0)}var serviceData={},filterType="all-notes",filterStatus="regular",originalData=[];return serviceData.noteData=[],serviceData.navigation=[],serviceData.loadData=function(){return NoteService.query()},serviceData.loadTypeData=function(){return NoteService.getTypes()},serviceData.setNote=function(data){originalData=data,filterData()},serviceData.getNote=function(){return serviceData.noteData},serviceData.getOne=function(id){return function(id){return serviceData.noteData.find(function(item){return item.id===id})}(id)},serviceData.setNavigation=function(data){serviceData.navigation=data},serviceData.getNavigation=function(){return serviceData.navigation},serviceData.add=function(data){NoteService.save(data).$promise.then(function(responseData){serviceData.noteData.push(data),originalData.push(data)})},serviceData.update=function(data){NoteService.update({id:data.id},data).$promise.then(function(responseData){updateRecords(data.id,data)})},serviceData.updateColor=function(id,color){NoteService.updateColor({id:id},{color:color}).$promise.then(function(data){updateRecords(id,{color:color}),filterData()})},serviceData.updateStatus=function(id,status){NoteService.updateStatus({id:id},{status:status}).$promise.then(function(data){return updateRecords(id,{status:status}),filterData()})},serviceData.removeAll=function(){NoteService.removeAll().$promise.then(function(data){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=data[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){removeData(_step.value)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}})},serviceData.remove=function(id){NoteService.remove({id:id}).$promise.then(function(data){removeData(id)})},serviceData.setFilter=function(data){filterType=data.type,filterStatus=data.status},serviceData.filter=function(){return filterData()},serviceData}]);