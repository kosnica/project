"use strict";angular.module("core.model",[]),angular.module("core.model").factory("DataModel",["NoteService","$filter",function(NoteService,$filter){function updateRecords(id,data){var boolFilter=arguments.length>2&&void 0!==arguments[2]&&arguments[2],index=originalData.findIndex(function(note){return note.id===id});for(var alias in data)originalData[index][alias]=data[alias];if(boolFilter)filterData();else{var arrayIndex=serviceData.noteData.findIndex(function(note){return note.id===id});for(var _alias in data)serviceData.noteData[arrayIndex][_alias]=data[_alias]}}function removeData(id){var index=serviceData.noteData.findIndex(function(note){return note.id===id});serviceData.noteData.splice(index,1);var arrayIndex=originalData.findIndex(function(note){return note.id===id});originalData.splice(arrayIndex,1)}function filterData(){var filteredData=[];return filteredData="all-notes"===filterType||"trash"===filterType?$filter("filter")(originalData,{status:filterStatus}):$filter("filter")(originalData,{status:filterStatus,type:filterType}),serviceData.noteData.length=0,filteredData.length>0&&(filteredData.map(function(obj){serviceData.noteData.push(obj)}),!0)}var serviceData={},filterType="all-notes",filterStatus="regular",originalData=[];return serviceData.noteData=[],serviceData.navigation=[],serviceData.loadData=function(){return NoteService.query()},serviceData.loadTypeData=function(){return NoteService.getTypes()},serviceData.setNote=function(data){originalData=data,filterData()},serviceData.getNote=function(){return serviceData.noteData},serviceData.getOne=function(id){return serviceData.noteData.find(function(item){return item.id===id})},serviceData.setNavigation=function(data){serviceData.navigation=data},serviceData.getNavigation=function(){return serviceData.navigation},serviceData.add=function(data,id){NoteService.save(data).$promise.then(function(responseData){Object.keys(responseData).length>0&&(serviceData.noteData.push(responseData),originalData.push(responseData))})},serviceData.update=function(data,id){NoteService.update({id:id},data).$promise.then(function(responseData){console.log(responseData),Object.keys(responseData).length>0&&updateRecords(id,responseData)})},serviceData.partialUpdate=function(id,record){NoteService.partialUpdate({id:id},record).$promise.then(function(responseData){responseData&&updateRecords(id,record,!0)})},serviceData.remove=function(id){NoteService.partialUpdate({id:id},{status:"removed"}).$promise.then(function(responseData){responseData&&removeData(id)})},serviceData.removeAll=function(){NoteService.removeAll().$promise.then(function(data){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=data[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){removeData(_step.value)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}})},serviceData.setFilter=function(data){filterType=data.type,filterStatus=data.status},serviceData.filter=function(){return filterData()},serviceData}]);